---
- name: Display ground variable
  debug:
    var: GROUND

# COSMOS Ubuntu
- name: Install COSMOS on Ubuntu
  become: yes
  when: ansible_facts['os_family'] == "Debian"
  block:
  - name: Install QT from RPMs
    ansible.builtin.apt_repository:
      repo: ppa:brightbox/ruby-ng
  - name: Install Ruby 2.5 on
    package:
      state: latest
      name: 
        - ruby2.5 
        - ruby2.5-dev 
        - ruby-switch
      update_cache: yes
  - name: Add rock-core/qt4 PPA
    ansible.builtin.apt_repository:
      repo: ppa:rock-core/qt4
  - name: Install qt4 and other packages
    package:
      state: latest
      name: 
        - qt4-default
        - qt4-dev-tools
        - openssl
        - zlib1g-dev
        - libcanberra-gtk-module
        - libpq-dev
      update_cache: yes

# COSMOS RedHat
- name: Install COSMOS for RedHat
  become: yes
  when: (ansible_facts['os_family'] == "RedHat") or (ansible_facts['os_family'] == "Rocky")
  block:
  - name: Install QT from RPMs
    yum:
      name:
        - "/vagrant/nos3_filestore/packages/rhel/qt-devel-4.8.7-52.el8.x86_64.rpm"
        - "/vagrant/nos3_filestore/packages/rhel/qt-common-4.8.7-52.el8.noarch.rpm"
        - "/vagrant/nos3_filestore/packages/rhel/qt-4.8.7-52.el8.x86_64.rpm"
        - "/vagrant/nos3_filestore/packages/rhel/qt-x11-4.8.7-52.el8.x86_64.rpm"
      disable_gpg_check: true
      state: present
  - name: Install Ruby for RedHat
    yum:
      name:
        - ruby-devel
        - rubygem-bundler
        - libcanberra-gtk2
        - postgresql-devel
      disable_gpg_check: true
      state: present
  - name: Gem psych 4.0.3 workaround for RedHat
    ignore_errors: True
    block:
    - name: Remove psych gem
      ignore_errors: True
      shell:
        cmd: gem uninstall -I psych
    - name: Install rdoc
      shell:
        cmd: gem install rdoc -v 6.3.3
    - name: Remove psych gem
      ignore_errors: True
      shell:
        cmd: gem uninstall -I psych
    - name: Install ruby-termios
      shell:
        cmd: gem install ruby-termios -v 1.1.0 --no-document
    - name: Install yard
      shell:
        cmd: gem install yard -v 0.9.27 --no-document
    - name: Install irb
      shell:
        cmd: gem install irb -v 0.9.6 --no-document

# COSMOS
- name: COSMOS
  when: (GROUND == "COSMOS") or (GROUND == "BOTH")
  become: yes
  block:
  - name: COSMOS QT Fix
    blockinfile:
      path: /etc/profile.d/all_users.sh
      create: yes
      mode: '0666'
      marker: "# {mark} Ansible managed NOS3 COSMOS QT Fix block"
      block: |
        export QT_X11_NO_MITSHM=1
  - name: Remove psych gem
    ignore_errors: True
    shell:
      cmd: gem uninstall -I psych
  - name: Update gem system
    ignore_errors: True
    shell:
      cmd: gem update --system 3.2.3 --no-document
  - name: Install nokogiri gem
    shell:
      cmd: gem install nokogiri -v 1.12.5 --no-document
  - name: Install cosmos gem
    shell:
      cmd: gem install cosmos -v 4.5.2 --no-document
  - name: Bundle update for RedHat
    when: (ansible_facts['os_family'] == "RedHat") or (ansible_facts['os_family'] == "Rocky")
    shell:
      cmd: bundle update
      chdir: /usr/local/share/gems/gems/cosmos-4.5.2
  - name: Bundle update for Ubuntu
    when: ansible_facts['os_family'] == "Debian"
    shell:
      cmd: bundle update
      chdir: /var/lib/gems/2.5.0/gems/cosmos-4.5.2

# AIT
- name: AIT
  when: ((GROUND == "AIT") or (GROUND == "BOTH")) and (ansible_facts['os_family'] == "Debian")
  tags: config
  block:
    - name: AIT - Run apt-get update
      become: yes
      apt: update_cache=yes
  
    - name: AIT - Install AIT Required Packages
      become: yes
      package:
        state: present
        name:
          - git
          - git-gui
          - gitk
          - virtualenv
          - virtualenvwrapper
      
    - name: AIT - Install python setup-tools 
      become: yes
      apt: name=python-setuptools
        
    - name: AIT - Install virtualenvwrapper via pip
      pip: name=virtualenvwrapper
      
    - name: AIT - Update bashrc for virtualenvwrapper
      become: yes
      become_user: nos3
      blockinfile:
        path: /home/nos3/.bashrc
        block: |
          export WORKON_HOME=/home/nos3/.virtualenvs
          export PROJECT_HOME=/home/nos3/Devel
     
    - name: AIT - Set up ait virtualenv directory
      become: yes
      become_user: nos3
      file:
        path: /home/nos3/.virtualenvs
        state: directory
        owner: nos3
        group: nos3
        mode: 0755
      
    - name: AIT - Copy virtualenvwrapper postactivate
      become: yes
      become_user: nos3
      copy:
        src: /vagrant/nos3_filestore/ait/postactivate
        dest: /home/nos3/.virtualenvs/postactivate
        owner: nos3
        group: nos3
        mode: 0644
      
    - name: AIT - Set up virtualenvs
      become: yes
      become_user: nos3
      include: install_ait_repo.yml ait={{item}}
      loop:
        - repo: AIT-Core
          version: 2.0.0
          venv: ait
        - repo: AIT-GUI
          version: 2.1.0
          venv: ait
        - repo: AIT-Core
          version: 2.0.0
          venv: ait-cfs
        - repo: AIT-GUI
          version: 2.1.0
          venv: ait-cfs
        - repo: AIT-CFS
          version: HEAD
          venv: ait-cfs     
       
    # Copy AIT Config files
    - name: AIT - Copy AIT Config Files
      become: yes
      become_user: nos3
      copy:
        src: /vagrant/nos3_filestore/ait/config/
        dest: /home/nos3/AIT/AIT-CFS/config
        owner: nos3
        group: nos3
        mode: 0644
    
    # Copy AIT GUI Files
    - name: AIT - Copy AIT GUI Files
      become: yes
      become_user: nos3
      copy:
        src: /vagrant/nos3_filestore/ait/gui/
        dest: /home/nos3/AIT/AIT-CFS/gui
        owner: nos3
        group: nos3
        mode: 0644
